<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- Ctrl + 스페이스 누르면 입력힌트가 나옴 -->
<!-- 2개의 객체를 바인딩시키는 것을 매핑이라고 함 -->
<!-- 이 매퍼는 회원관리 CRUD(입력, 조회, 수정, 삭제)를 처리하는 쿼리를 모아놓은 파일입니다. -->
<!-- 이번주는 조회기능 중 검색, 페이징처리 기능을 실습하는것이 핵심 -->
<mapper namespace="memberMapper">
<!-- 공통쿼리 마이바티스 include문 사용(아래) -->
<!-- if 조건문에서 test조건부분에 문자열 비교시 '문자열'.toString()형 변환함수는 필수입니다.(없으면 비교 불가) -->
<!-- test="'all'.equals(search_type)"으로도 쓸 수 있는데 equals메소드를 사용하면 null비교도 포함됩니다. -->
<sql id="sqlWhere">
	<if test ="search_type != '' and search_type != null">
      WHERE
       	<if test="search_type == 'all'.toString()">
	        user_id LIKE '%'||#{search_keyword}||'%'
	        OR user_name LIKE '%'||#{search_keyword}||'%'
        </if>
        <if test="search_type == 'user_id'.toString()">
        	user_id LIKE '%'||#{search_keyword}||'%'
        </if>
        <if test="search_type == 'user_name'.toString()">
        	user_name LIKE '%'||#{search_keyword}||'%'
        </if>
	</if>
</sql>
<!-- jsp수정페이지에 수정할 내용을 입력하는 쿼리 
사용자 정보 수정 시 매번 암호를 설정하지 않게 조건을 부여해 암호 변경 값이 있을 때만 수정되도록 처리.
-->
<update id="updateMember">
	update tbl_member set
	email = #{email},
	enabled = #{enabled},
	levels = #{levels},
	point = #{point},
	update_date = systimestamp,
	<if test="user_pw != ''">
		user_pw = #{user_pw},
	</if>
	user_name = #{user_name}
	where user_id = #{user_id}
</update>
<!-- jsp상세보기에 출력할 내용을 뽑아내는 쿼리 -->
<select id="readMember" resultType="com.edu.vo.MemberVO">
	select * from tbl_member where user_id = #{user_id}
</select>
<!-- jsp폼에서 전송받은 user_id값의 데이터를 이용해서 DB에 해당 레코드를 삭제(아래) -->
<delete id="deleteMember">
delete from tbl_member where user_id = #{user_id}
</delete>
<!-- jsp폼에서 전송받은 memberVO객체의 데이터를 DB에 insert합니다(아래) -->
<insert id="insertMember">
insert into tbl_member
(
user_id,
user_pw,
user_name,
email,
point,
enabled,
levels,
reg_date
)
values
(
#{user_id},
#{user_pw},
#{user_name},
#{email},
#{point},
#{enabled},
#{levels},
systimestamp
)
</insert>

<!-- 카운트 쿼리(아래) -->
<!-- 현재처럼 무조건 갯수를 구하면 검색결과에 대한 페이징 값을 구할 수 없음.
그래서 검색이 포함된 카운트 갯수가 나와야 한다.(include) -->
<select id="countMember" resultType="int">
	select count(*) from tbl_member
	<include refid="sqlWhere" />
</select>
<!-- pageVO를 받아서 처리하는 조회 쿼리 -->
<select id="selectMember" resultType="com.edu.vo.MemberVO">
SELECT TB.* FROM
    (
    SELECT ROWNUM AS RNUM, TA.* FROM
    (
        SELECT * FROM tbl_member
        <include refid="sqlWhere" />
        ORDER BY reg_date DESC
    ) TA 
<![CDATA[
    WHERE ROWNUM <= (#{queryStartNo}*#{queryPerPageNum})+#{queryPerPageNum}
) TB WHERE TB.RNUM > #{queryStartNo}*#{queryPerPageNum}
]]>
</select>
</mapper>